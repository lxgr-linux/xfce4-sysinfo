#!/bin/bash
## xfce4-sysinfo

disticon=auto
. /etc/xfce4-sysinfo.conf
. ~/.config/xfce4-sysinfo/xfce4-sysinfo.conf
. /etc/os-release

if [ ! -e ~/.config/xfce4-sysinfo/xfce4-sysinfo.conf ]
  then
    mkdir ~/.config/xfce4-sysinfo/
fi

update(){
  if [ -e /usr/share/xfce4-sysinfo/version ]
    then
      echo "The latest version of this software will be downloaded and installed. You will have to type in your password! Do you want this? [y/n]"
      read ans
      if [ $ans == y ]
        then
          mkdir ~/.build
          cd ~/.build
          echo :: Cloning git repository
          git clone https://github.com/lxgr-linux/xfce4-sysinfo.git
          cd ./xfce4-sysinfo
          echo :: Installing the software
          sudo ./install.sh
          cd
          echo :: Cleaning up
          sudo rm -r ~/.build
          echo :: Done!
        fi
        echo :: Exit
    else
      echo "The latest version of this software will be downloaded and installed from the AUR. You will have to type in your password! Do you want this? [y/n]"
      read ans
      if [ $ans == y ]
        then
          mkdir ~/.build_AUR
          cd ~/.build_AUR
          echo :: Cloning git repository
          git clone https://aur.archlinux.org/xfce4-sysinfo.git
          cd ./xfce4-sysinfo
          echo :: Making and installing the package
          makepkg -sif
          cd
          echo :: Cleaning up
          sudo rm -r ~/.build_AUR
          echo :: Done!
      fi
      echo :: Exit
  fi
}

get(){
##getting icon
if [ $disticon == auto ]
  then
    case $ID in
      debian | kali)
      icon='"'emblem-$ID'"'
      ;;
      ubuntu | xubuntu)
      icon='"'xubuntu-logo'"'
      #file="/usr/share/xfce4-sysinfo/icons/ubuntu.png"
      ;;
      linuxmint)
      icon='"'linuxmint-logo'"'
      ;;
      opensuse-leap)
      icon='"'suse'"'
      ;;
      *)
      icon='"'$LOGO'"'
      ;;
    esac
  else
    icon='"'$disticon'"'
  fi

##getting packagemanager

  if [ -e /bin/pacman ]
    then
      pac=Pacman
      ipac=$(pacman -Qq | wc -l)
  elif [ -e /bin/yum ]
    then
      pac=Yum
      ipac=$(rpm -qa | wc -l)
  elif [ -e /usr/bin/apt ]
    then
      pac=Apt
      ipac=$(apt list --installed | wc -l)
  fi

##checking if flatpak and snap are installed

pacs=""
if [ -e /usr/bin/snap ]
  then
    pacs=" "$(snap list | wc -l)" (Snap)"
fi

pacf=""
if [ -e /usr/bin/flatpak ]
  then
    pacf=" "$(flatpak list | wc -l)" (Flatpak)"
fi

##checking mode

if [ $mode == extended ]
  then
    modet='<text wrap="true" width-chars="46" use-markup="true"><label>"<b> test:</b>test"</label></text>'
    state='true'
  else
    state='false'
fi
}

updateg(){
  if [ -e /usr/share/xfce4-sysinfo/version ]; then zenity --info --text "The latest version of this software will be downloaded and installed. You will have to type in your password!" && exo-open --launch TerminalEmulator sh -c "mkdir ~/.build; cd ~/.build; echo :: Cloning git repository; git clone https://github.com/lxgr-linux/xfce4-sysinfo.git; cd ./xfce4-sysinfo; echo :: Installing the software; sudo ./install.sh; cd; echo :: Cleaning up; sudo rm -r ~/.build; echo :: Done!; zenity --info --text 'Done'"; else zenity --info --text "The latest version of this software will be downloaded and installed from the AUR. You will have to type in your password!" && exo-open --launch TerminalEmulator sh -c "mkdir ~/.build_AUR; cd ~/.build_AUR; echo :: Cloning git repository; git clone https://aur.archlinux.org/xfce4-sysinfo.git; cd ./xfce4-sysinfo; echo :: Making and installing the package; makepkg -sif; cd; echo :: Cleaning up; sudo rm -r ~/.build_AUR; echo :: Done!; zenity --info --text 'Done'"; fi
}

general(){

export about_dialog='

<window title="About Systeminfo" icon-name="dialog-information-symbolic" resizable="true" width-request="500" height-request="auto">
  <vbox>
    <pixmap>
      <input file icon="dialog-information-symbolic"></input>
      <height>70</height><width>70</width>
    </pixmap>
  <hseparator width-request="auto"></hseparator>
    <text use-markup="true"><label>"<b>xfce4-sysinfo</b>"</label></text>
    <text justify="2"><label>A little application to show systeminfos in xfce and expand the xfce settings</label></text>
    <text><label>Created by: lxgr [lxgr@protonmail.com]</label></text>
    <hbox homogeneous="true">
      <hbox>
        <text><label>Homepage: </label></text>
        <button relief="2">
          <action>exo-open --launch WebBrowser https://github.com/lxgr-linux/xfce4-sysinfo</action>
          <label>https://github.com/lxgr-linux/xfce4-sysinfo</label>
        </button>
      </hbox>
    </hbox>
    <text><label>Version: '$(sh -c "pacman -Qs xfce4-sysinfo  | egrep xfce4-sysinfo | awk {'print $2'}" ; tail -n1 /usr/share/xfce4-sysinfo/version)'</label></text>
    <hbox homogeneous="true">
      <checkbox>
        <label>Extended mode</label>
        <default>'$state'</default>
        <action>if true echo mode=extended > ~/.config/xfce4-sysinfo/xfce4-sysinfo.conf</action>
        <action>if false echo mode=normal > ~/.config/xfce4-sysinfo/xfce4-sysinfo.conf</action>
      </checkbox>
    </hbox>
    <text><label>" "</label></text>
    <hseparator width-request="auto"></hseparator>
    <hbox spacing="0">
      <button width-request="100">
        <input file icon="dialog-information-symbolic"></input>
        <height>18</height>
        <label>"License"</label>
        <action>exo-open --launch TerminalEmulator sh -c "cat /usr/share/licenses/xfce4-sysinfo/LICENSE | less"</action>
      </button>
      <button>
        <input file icon="software-update-available-symbolic"></input>
        <height>18</height>
        <label>"Update this software"</label>
        <action>if [ -e /usr/share/xfce4-sysinfo/version ]; then zenity --info --text "The latest version of this software will be downloaded and installed. You will have to type in your password!" && exo-open --launch TerminalEmulator sh -c "mkdir ~/.build; cd ~/.build; echo :: Cloning git repository; git clone https://github.com/lxgr-linux/xfce4-sysinfo.git; cd ./xfce4-sysinfo; echo :: Installing the software; sudo ./install.sh; cd; echo :: Cleaning up; sudo rm -r ~/.build; echo :: Done!; zenity --info --text 'Done'"; else zenity --info --text "The latest version of this software will be downloaded and installed from the AUR. You will have to type in your password!" && exo-open --launch TerminalEmulator sh -c "mkdir ~/.build_AUR; cd ~/.build_AUR; echo :: Cloning git repository; git clone https://aur.archlinux.org/xfce4-sysinfo.git; cd ./xfce4-sysinfo; echo :: Making and installing the package; makepkg -sif; cd; echo :: Cleaning up; sudo rm -r ~/.build_AUR; echo :: Done!; zenity --info --text 'Done'"; fi</action>
      </button>
      <button use-stock="true" label="gtk-quit" width-request="100">
      </button>
    </hbox>
  </vbox>
</window>
'


export MAIN_DIALOG='

<window title="Systeminfo" icon-name="dialog-information-symbolic" resizable="false" width-request="700" height-request="auto">
 <vbox>
  <hbox space-expand="true">
    <hbox xalign="0">
      <hbox width-request="auto">
       <pixmap xalign="0">
         <input file icon="dialog-information-symbolic"></input>
         <height>60</height><width>60</width>
       </pixmap>
      </hbox>
       <vbox homogeneous="true" width-request="620" space-fill="true">
         <text use-markup="true"  justify="0" wrap="true" xalign="0"><label>"<b><big>Systeminfo</big></b>
Here you can see your systems information"</label></text>
      </vbox>
      </hbox>
    </hbox>
   <frame>
     <notebook show-tabs="false">
       <hbox homogeneous="true">
         <vbox spacing="1">
           <text height-request="0"><label>" "</label></text>
           <text use-markup="true"><label>"<b>General:</b>"</label></text>
           <text wrap="true" width-chars="45" use-markup="true"><label>"<b> Operatingsystem:</b> '$PRETTY_NAME'"</label></text>
           <text wrap="true" width-chars="46" use-markup="true"><label>"<b> Kernel:</b> '$(uname -msr)'"</label></text>
           <text wrap="true" width-chars="46" use-markup="true"><label>"<b> XFCE version:</b> '$(xfce4-session -V | egrep xfce4-session | awk {'print $2'})'"</label></text>'$modet'
           <hbox homogeneous="true" spacing="0">
             <hbox spacing="0">
               <text wrap="true" justify="1" use-markup="true"><label>"<b>Installed Packages:</b> '$ipac' ('$pac')
'$pacf''$pacs'"</label></text>
               <button relief="2">
                 <input file icon="software-update-available-symbolic"></input>
                 <height>18</height>
                 <label>"Update"</label>
                 <action>zenity --info --text "Your system will be updated" && zenity --password --title "Password" | sudo -S exo-open --launch TerminalEmulator sh -c "pacman -Syu || apt update && apt-get dist-upgrade || yum update; echo :: Done; zenity --info --text "Done!""</action>
               </button>
             </hbox>
           </hbox>
        <hbox homogeneous="true" spacing="0">
          <hbox spacing="0">
            <text wrap="true" auto-refresh="true" use-markup="true" justify="1"><label>"<b>Hostname:</b>
'$(hostname)'"</label></text>
            <button relief="2">
              <input file icon="document-edit"></input>
              <height>18</height>
              <label>"Change"</label>
              <action>zenity --password --title "Password"| sudo -S hostnamectl set-hostname $(zenity --entry --text "Set new hostname:" --entry-text $(hostname) --title="New Hostname")</action>
            </button>
          </hbox>
        </hbox>
        <vbox spacing="1">
          <text><label>" "</label></text>
          <text use-markup="true"><label>"<b>Hardware:</b>"</label></text>
          <text wrap="true" use-markup="true" width-chars="50"><label>"<b> Host:</b> '$(cat /sys/devices/virtual/dmi/id/sys_vendor)' '$(cat /sys/devices/virtual/dmi/id/product_name)'"</label></text>
          <text wrap="true" use-markup="true" width-chars="50"><label>"<b> CPU:</b> '$(egrep "model name" /proc/cpuinfo | uniq | awk {'print $4,$5,$6,$7,$8,$9,$10,$11,$12'})'"</label></text>
          <text wrap="true" use-markup="true" width-chars="50" justify="2"><label>"<b> GPU:</b> '$(lspci | egrep VGA | awk {'print $5,$6,$7,$8,$9,$10,$11'})' '$(lspci | egrep 3D | awk {'print $4,$5,$6,$7,$8,$9,$10,$11'})'"</label></text>
          <text wrap="true" use-markup="true" width-chars="50"><label>"<b> RAM:</b> '$(free -h | sed -n '2p' | awk {'print $2'})'"</label></text>
          <text wrap="true" use-markup="true" width-chars="50"><label>"<b> Disk used:</b> '$(df -h | egrep -w ' /' | awk {'print $3'})'/'$(df -h | egrep -w ' /' | awk {'print $2'})'"</label></text>
          <text><label>" "</label></text>
        </vbox>
      </vbox>
      <vbox homogeneous="true">
        <pixmap auto-refresh="true">
          <input file icon='$icon'></input>
          <height>150</height><width>150</width>
        </pixmap>
      </vbox>
    </hbox>
  </notebook>
  </frame>
  <hbox spacing="0">
    <button use-stock="true" label="gtk-about" width-request="100">
      <action>gtkdialog --program=about_dialog & </action>
    </button>
    <button use-stock="true" label="gtk-quit" width-request="100">
    </button>
  </hbox>
 </vbox>
</window>
'
}

case $1 in
    -s|--start)
    get
    general
    gtkdialog --program=MAIN_DIALOG
    exit 0
    ;;
		-h|--help)
                echo "xfce4-sysinfo"
                echo "Usage: $0 <option> <string>"
                echo "      -s|--start        : Starts xfce4-sysinfo"
                echo "      -a|--about        : Displays about-dialog"
                echo "      -v|--version      : Displays version"
                echo "      -c|--console      : Just gives console output"
                echo "      -d|--distro       : Specifys the logo which is printed out (possible options: ubuntu)"
                echo "      -l|--license      : Displays license"
                echo "      -u|--update       : Updates this software via the AUR or github"
                echo "      --update-grafical : Same as -u, but wich an gui"
                echo "      -h|--help         : Displays this help-dialog"
                echo "      --help-logo       : Displays help for your distributions logo in the systeminfo dialog"
		exit 0
		;;
    -u|--update)
      update
    exit 0
    ;;
    --update-grafical)
      updateg
    exit 0
    ;;
    -c|--console)
      get
      echo General:
      echo "  Operatingsystem:" $PRETTY_NAME
      echo "  Kernel:" $(uname -msr)
      echo "  XFCE version:" $(xfce4-session -V | egrep xfce4-session | awk {'print $2'})
      echo "  Installed Packages: $ipac ($pac)$pacf$pacs"
      echo "  Hostname: $(hostname)"
      echo Hardware:
      echo "  Host:" $(cat /sys/devices/virtual/dmi/id/sys_vendor)" "$(cat /sys/devices/virtual/dmi/id/product_name)
      echo "  CPU:" $(egrep "model name" /proc/cpuinfo | uniq | awk {'print $4,$5,$6,$7,$8,$9,$10,$11,$12'})
      echo "  GPU:" $(lspci | egrep VGA | awk {'print $5,$6,$7,$8,$9,$10,$11'}) $(lspci | egrep 3D | awk {'print $4,$5,$6,$7,$8,$9,$10,$11'})
      echo "  RAM:" $(free -h | sed -n '2p' | awk {'print $2'})
      echo "  Disk used:" $(df -h | egrep -w ' /' | awk {'print $3'})'/'$(df -h | egrep -w ' /' | awk {'print $2'})
    exit 0
    ;;
    -d|--distro)
      ID=$2
      echo :: $ID
      get
      general
      gtkdialog --program=MAIN_DIALOG
    exit 0
    ;;
    -l|--license)
      cat /usr/share/licenses/xfce4-sysinfo/LICENSE | less
    exit 0
    ;;
    -a|--about)
      general
      gtkdialog --program=about_dialog
    exit 0
    ;;
    --help-logo)
      echo "This is the help/info text for your distributions logo in the systeminfo dialog:"
      echo ""
      echo "     The available logos are stored in /usr/share/pixmaps or defined in the icontheme"
      echo "     If the logo of the Distribution you are using is not displayed"
      echo "     you can copy it to /usr/share/pixmaps and change 'disticon' in"
      echo "     /etc/xfce4-sysinfo.conf to the name of the icon."
      echo "     For example disticon=emblem-debian. The defaultvalue is 'auto'."
      echo "     If set to auto sysinfo will try to detect the icon it self"
      echo "     (This is not perfect and will not work on every distribution)."
    exit 0
    ;;
    -v|--version)
      echo $(pacman -Qs xfce4-sysinfo | egrep xfce4-sysinfo | awk {'print $2'} ; tail -n1 /usr/share/xfce4-sysinfo/version)
    exit 0
    ;;
    * )
      if [ "$1" == "" ]
      then
        get
        general
        gtkdialog --program=MAIN_DIALOG
        exit 0
      else
        echo ":: ERROR: $1 is no known option! Try --help to see all options!"
        exit 1
      fi
    ;;
esac
